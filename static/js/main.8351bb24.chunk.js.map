{"version":3,"sources":["firebase.js","components/FormComponent/index.jsx","TodoContext.js","components/ListComponent/index.jsx","components/Paginator/index.jsx","components/FilterComponent/index.jsx","App.js","serviceWorker.js","index.js"],"names":["firestore","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useStyles","makeStyles","theme","root","padding","display","alignItems","input","fontSize","marginLeft","spacing","flex","iconButton","FormComponent","setOpen","setStatus","setCtn","useState","setInput","checkInput","length","collection","add","content","done","timestamp","FieldValue","serverTimestamp","classes","Paper","component","className","InputBase","placeholder","inputProps","value","onChange","event","target","onKeyDown","keyCode","preventDefault","Tooltip","title","IconButton","aria-label","onClick","Add","TodoContext","createContext","TodoProvider","children","filter","setFilter","todos","setTodos","useEffect","orderBy","onSnapshot","snap","docs","map","doc","id","data","where","currPage","setcurrPage","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","size","Math","ceil","Provider","item","paddingLeft","textDecoration","color","ListComponent","useContext","Typography","variant","List","index","Fragment","key","ListItem","button","set","merge","then","handleListItemClick","ListItemText","primary","secondary","toDate","toLocaleString","ListItemSecondaryAction","delete","handleListItemDeleteClick","Delete","Divider","Paginator","Pagination","count","shape","e","page","justifyContent","text","alignSelf","FilterComponent","align","ToggleButtonGroup","exclusive","filtered","ToggleButton","Button","Alert","props","elevation","app","marginTop","maxHeight","App","open","ctn","status","handleClose","reason","Container","maxWidth","CssBaseline","Grid","container","xs","Snackbar","autoHideDuration","onClose","severity","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8351bb24.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD-sc8QsW6KDlx-N1jZ5K8UjjyPnW1cnjY\",\r\n  authDomain: \"shynntodo.firebaseapp.com\",\r\n  databaseURL: \"https://shynntodo.firebaseio.com\",\r\n  projectId: \"shynntodo\",\r\n  storageBucket: \"shynntodo.appspot.com\",\r\n  messagingSenderId: \"276417847313\",\r\n  appId: \"1:276417847313:web:52f59975a832930eee51b0\",\r\n};\r\n\r\nexport const fire = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default fire;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  IconButton,\r\n  InputBase,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { firestore } from \"../../firebase\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"10px 12px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    fontSize: \"20px\",\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 8,\r\n  },\r\n}));\r\n\r\nexport const FormComponent = ({ setOpen, setStatus, setCtn }) => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const checkInput = () => {\r\n    if (input.length < 4) {\r\n      setOpen(true);\r\n      setStatus(\"error\");\r\n      setCtn(\"Content must be at lease 4 characters!\");\r\n      return;\r\n    } else {\r\n      firestore.collection(\"todos\").add({\r\n        content: input,\r\n        done: false,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n      setInput(\"\");\r\n      setOpen(true);\r\n      setStatus(\"success\");\r\n      setCtn(`Create ${input} successfully!`);\r\n    }\r\n  };\r\n\r\n  const keyPress = (event) => {\r\n    if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n      checkInput();\r\n    }\r\n  };\r\n\r\n  const addTodo = (event) => {\r\n    event.preventDefault();\r\n    checkInput();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper component=\"form\" className={classes.root}>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"What need to be done?\"\r\n        inputProps={{ \"aria-label\": \"what need to be done\" }}\r\n        value={input}\r\n        onChange={handleChange}\r\n        onKeyDown={keyPress}\r\n      />\r\n      <Tooltip title=\"Add a new TODO\">\r\n        <IconButton\r\n          className={classes.iconButton}\r\n          aria-label=\"add\"\r\n          onClick={addTodo}\r\n        >\r\n          <Add />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { firestore } from \"./firebase\";\r\n\r\nexport const TodoContext = createContext();\r\n\r\nexport const TodoProvider = ({ children }) => {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [todos, setTodos] = useState([]);\r\n  useEffect(() => {\r\n    switch (filter) {\r\n      case \"all\":\r\n        return firestore\r\n          .collection(\"todos\")\r\n          .orderBy(\"timestamp\", \"desc\")\r\n          .onSnapshot((snap) => {\r\n            setTodos(\r\n              snap.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n              }))\r\n            );\r\n          });\r\n      case \"unfinish\":\r\n        return firestore\r\n          .collection(\"todos\")\r\n          .where(\"done\", \"==\", false)\r\n          .orderBy(\"timestamp\", \"desc\")\r\n          .onSnapshot((snap) => {\r\n            setTodos(\r\n              snap.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n              }))\r\n            );\r\n          });\r\n      case \"finished\":\r\n        return firestore\r\n          .collection(\"todos\")\r\n          .where(\"done\", \"==\", true)\r\n          .orderBy(\"timestamp\", \"desc\")\r\n          .onSnapshot((snap) => {\r\n            setTodos(\r\n              snap.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n              }))\r\n            );\r\n          });\r\n      default:\r\n        return firestore\r\n          .collection(\"todos\")\r\n          .orderBy(\"timestamp\", \"desc\")\r\n          .onSnapshot((snap) => {\r\n            setTodos(snap.docs.map((doc) => ({ id: doc.id, ...doc.data() })));\r\n          });\r\n    }\r\n  }, [filter]);\r\n\r\n  const [currPage, setcurrPage] = useState(1);\r\n\r\n  const indexOfLastTodo = currPage * 5;\r\n  const indexOfFirstTodo = indexOfLastTodo - 5;\r\n  const currentTodos = todos.slice(indexOfFirstTodo, indexOfLastTodo);\r\n  const size = Math.ceil(todos.length / 5);\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        todos,\r\n        currentTodos,\r\n        currPage,\r\n        setcurrPage,\r\n        size,\r\n        filter,\r\n        setFilter,\r\n      }}\r\n    >\r\n      {children}\r\n    </TodoContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  ListItem,\r\n  List,\r\n  makeStyles,\r\n  Divider,\r\n  Paper,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport { TodoContext } from \"../../TodoContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(0),\r\n  },\r\n  item: {\r\n    padding: theme.spacing(1),\r\n    paddingLeft: theme.spacing(3),\r\n    fontSize: \"18px\",\r\n  },\r\n  done: {\r\n    textDecoration: \"line-through\",\r\n    color: \"#777\",\r\n  },\r\n}));\r\n\r\nexport const ListComponent = ({ setOpen, setStatus, setCtn }) => {\r\n  const { currentTodos } = useContext(TodoContext);\r\n\r\n  const handleListItemClick = (item) => {\r\n    firestore\r\n      .collection(\"todos\")\r\n      .doc(item.id)\r\n      .set(\r\n        {\r\n          done: !item.done,\r\n        },\r\n        { merge: true }\r\n      )\r\n      .then(() => {\r\n        setOpen(true);\r\n        setStatus(\"success\");\r\n        setCtn(\r\n          `Changed ${item.content} status to ${\r\n            !item.done ? \"finished\" : \"unfinished\"\r\n          }!`\r\n        );\r\n      });\r\n  };\r\n\r\n  const handleListItemDeleteClick = (item) => {\r\n    firestore\r\n      .collection(\"todos\")\r\n      .doc(item.id)\r\n      .delete()\r\n      .then(() => {\r\n        setOpen(true);\r\n        setStatus(\"success\");\r\n        setCtn(`${item.content} has been deleted!`);\r\n      });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  if (currentTodos.length === 0) {\r\n    return <Typography variant=\"h4\">Nothing todo here...</Typography>;\r\n  }\r\n  return (\r\n    <Paper>\r\n      <List className={classes.root}>\r\n        {currentTodos &&\r\n          currentTodos.map((item, index) => (\r\n            <React.Fragment key={index}>\r\n              <ListItem\r\n                button\r\n                className={classes.item}\r\n                onClick={(event) => handleListItemClick(item)}\r\n              >\r\n                <ListItemText\r\n                  className={item.done ? classes.done : null}\r\n                  primary={item.content}\r\n                  secondary={\r\n                    item.timestamp && item.timestamp.toDate().toLocaleString()\r\n                  }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Tooltip title={`Delete ${item.content}`}>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      aria-label=\"delete\"\r\n                      onClick={(event) => handleListItemDeleteClick(item)}\r\n                    >\r\n                      <Delete />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              <Divider />\r\n            </React.Fragment>\r\n          ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { TodoContext } from \"../../TodoContext\";\r\n\r\nexport const Paginator = () => {\r\n  const { setcurrPage, size } = useContext(TodoContext);\r\n\r\n  if (size === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Pagination\r\n      count={size}\r\n      variant=\"outlined\"\r\n      shape=\"rounded\"\r\n      onChange={(e, page) => setcurrPage(page)}\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Paper, makeStyles, Button, Typography } from \"@material-ui/core\";\r\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport { TodoContext } from \"../../TodoContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: theme.spacing(1),\r\n  },\r\n  text: {\r\n    alignSelf: \"center\",\r\n  },\r\n}));\r\n\r\nexport const FilterComponent = ({ setOpen, setStatus, setCtn }) => {\r\n  const classes = useStyles();\r\n  const { todos, filter, setFilter } = useContext(TodoContext);\r\n  const handleChange = (e, filtered) => {\r\n    setFilter(filtered);\r\n\r\n    setOpen(true);\r\n    setStatus(\"success\");\r\n    setCtn(`Filtering ${filtered} todo!`);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography\r\n        variant=\"body2\"\r\n        color=\"secondary\"\r\n        display=\"block\"\r\n        align=\"center\"\r\n        className={classes.text}\r\n      >\r\n        {todos.length} {todos.length > 1 ? \"items\" : \"item\"}\r\n      </Typography>\r\n      <ToggleButtonGroup\r\n        exclusive\r\n        size=\"small\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n      >\r\n        <ToggleButton value=\"all\">All</ToggleButton>\r\n        <ToggleButton value=\"unfinish\">Unfinish</ToggleButton>\r\n        <ToggleButton value=\"finished\">Finished</ToggleButton>\r\n      </ToggleButtonGroup>\r\n      <Button variant=\"contained\" color=\"secondary\" size=\"small\">\r\n        Clear all\r\n      </Button>\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport {\n  CssBaseline,\n  Container,\n  Grid,\n  Snackbar,\n  makeStyles,\n} from \"@material-ui/core\";\nimport \"./App.scss\";\nimport {\n  FormComponent,\n  ListComponent,\n  Paginator,\n  FilterComponent,\n} from \"./components/\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    marginTop: theme.spacing(2),\n    maxHeight: \"100vh\"\n  },\n}));\n\nconst App = () => {\n  const [open, setOpen] = useState(false);\n  const [ctn, setCtn] = useState(\"\");\n  const [status, setStatus] = useState(\"success\");\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"sm\" className={classes.app}>\n      <CssBaseline />\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <FormComponent\n            setOpen={setOpen}\n            setStatus={setStatus}\n            setCtn={setCtn}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <ListComponent\n            setOpen={setOpen}\n            setStatus={setStatus}\n            setCtn={setCtn}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FilterComponent\n            setOpen={setOpen}\n            setStatus={setStatus}\n            setCtn={setCtn}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Paginator />\n        </Grid>\n      </Grid>\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={status}>\n          {ctn}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { TodoProvider } from \"./TodoContext\";\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}